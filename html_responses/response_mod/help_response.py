#! /usr/bin/env python3
# creata @cyberscriptor

__all__ = ["get_help"]


def get_help():
    help_text = """
    Скрипт предназначен для автоматической проверки ответов любого количества,
    любых ссылок на веб-страницы. Даёт запрос на страницу получает ответ.
    Ссылку и ответ записывает в файл. Также умеет вычислять разницу двух разных
    файлов с ссылками и ответами и отправлять результат на почту. Выводить ход
    работы на консоль.

    Данная справка расскажет вам, как пользоваться данным скриптом. Запуск
    приложения без параметров вызывает только данную справку! Если же вы хотите
    сделать что-то кроме чтения данной справки, то укажите обязательный параметр и,
    если необходимо, дополнительные, указанные ниже:

    -n, --name        обязательный параметр, при указании данного параметра
                      ожидается имя файла со ссылками, если не указан, будет
                      вызвана данная справка и скрипт завершит работу.

    -p, --path        необязательный параметр, при указании данного параметра
                      ожидается путь к файлу со ссылками, если не указан,
                      используется значение по умолчанию.

    -s, --sample      необязательный флаг, если указан, то принимает значение
                      "True", которое значит что будет создан файл-шаблон
                      ответов, для последующего сравнения с тестовым файлом
                      ответов, если флаг не указан, то принимает значение
                      "False" и файл-шаблон создан не будет!

    -m, --mail        необязательный параметр, при указании данного параметра
                      ожидается электронный адрес получателя, для отправки
                      результата работы скрипта, если не указан, то письмо
                      не формируется!

    Пример строки со всеми параметрами:
    check_status.py -n foo_bar.txt -p /foo/bar/ -s -m anon@anon.com

    Пример строки с минимально допустимым числом параметров:
    check_status.py -n foo_bar.txt
    """
    print("{bold}{green}{}{endcolor}".format(help_text, bold="\033[1m",
                                             green="\033[32m",
                                             endcolor="\033[0m"))
